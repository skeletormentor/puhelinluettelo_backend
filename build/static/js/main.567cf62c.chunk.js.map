{"version":3,"sources":["services/persons.js","PhonebookApp.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","index","delete","id","put","Filter","props","value","onChange","PersonForm","onSubmit","namevalue","onChangeName","numbervalue","onChangeNumber","type","Notification","message","startsWith","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","useEffect","personService","initialPersons","messageHandler","string","setTimeout","event","target","preventDefault","personObject","name","number","clear","document","getElementById","focus","find","person","window","confirm","p","res","catch","returnedPerson","concat","filter","match","RegExp","map","key","onClick","deleteData","ReactDOM","render"],"mappings":"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","file":"static/js/main.567cf62c.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = index => {\r\n    return axios.delete(`${baseUrl}/${index}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, del, update}","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport './PhonebookApp.css'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter shown with\r\n            <input value={props.value}\r\n                   onChange={props.onChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n            <div>\r\n                name:\r\n                <input value={props.namevalue}\r\n                       onChange={props.onChangeName}\r\n                       id='name'/>\r\n            </div>\r\n            <div>\r\n                number:\r\n                <input value={props.numbervalue}\r\n                       onChange={props.onChangeNumber}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) return null\r\n    else if (message.startsWith('Error')) {\r\n        return (<div className=\"error\">{message}</div>)\r\n    }\r\n    return <div className=\"success\">{message}</div>\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const [ persons, setPersons ] = useState([])\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ newFilter, setNewFilter ] = useState('')\r\n    const [ message, setMessage ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons)\r\n            })\r\n    }, [])\r\n\r\n    const addData = (event) => {\r\n        event.preventDefault()\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        const clear = () => {\r\n            setNewName('')\r\n            setNewNumber('')\r\n            document.getElementById('name').focus()\r\n        }\r\n\r\n        if (persons.find(person => person.name === newName)) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n\r\n                const person = persons.find(p => p.name === newName)\r\n                personService.update(person.id, personObject)\r\n                    .then(() => {\r\n                        personService.getAll().then(res => setPersons(res))\r\n                        messageHandler(`${person.name}'s number updated`)\r\n                        clear()\r\n                    })\r\n                    .catch(() => {\r\n                        messageHandler(`Error. Info of ${person.name} has already been removed from server`)\r\n                    })\r\n            }\r\n            return\r\n        }\r\n\r\n        personService\r\n            .create(personObject)\r\n            .then(returnedPerson => {\r\n                setPersons(persons.concat(returnedPerson))\r\n                messageHandler(`Added ${returnedPerson.name}`)\r\n                clear()\r\n            })\r\n    }\r\n\r\n    const deleteData = (person) => {\r\n        if (window.confirm(`Delete ${person.name}?`)) {\r\n            personService.del(person.id).then(() => {\r\n                personService.getAll().then(res => {\r\n                    setPersons(res)\r\n                    messageHandler(`Deleted ${person.name}`)\r\n                })})\r\n        }\r\n    }\r\n\r\n    const messageHandler = (string) => {\r\n        setMessage(string)\r\n        setTimeout(() => {\r\n            setMessage(null)\r\n        }, 2000)\r\n    }\r\n\r\n    const handleNameChange = (event) => setNewName(event.target.value)\r\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n    const handleFilterChange = (event) => setNewFilter(event.target.value)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification message={message} />\r\n            <Filter value={newFilter} onChange={handleFilterChange} />\r\n            <h2>Add a new:</h2>\r\n            <PersonForm\r\n                onSubmit={addData}\r\n                namevalue={newName}\r\n                numbervalue={newNumber}\r\n                onChangeName={handleNameChange}\r\n                onChangeNumber={handleNumberChange} />\r\n            <h2>Numbers:</h2>\r\n            <ul>\r\n                {persons\r\n                    .filter(person => person.name.match(\r\n                        new RegExp(newFilter, 'i'))\r\n                    )\r\n                    .map(person =>\r\n                        <li key={person.id}>{person.name} {person.number}\r\n                            <button onClick={() => deleteData(person)}>delete</button>\r\n                        </li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './PhonebookApp';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}