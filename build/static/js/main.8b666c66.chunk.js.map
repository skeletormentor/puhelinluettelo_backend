{"version":3,"sources":["services/persons.js","components/Person.js","PhonebookApp.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","index","delete","id","put","Person","person","deletePerson","name","number","onClick","Filter","props","value","onChange","PersonForm","onSubmit","namevalue","onChangeName","numbervalue","onChangeNumber","type","Notification","message","startsWith","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","useEffect","personService","initialPersons","updateData","personObject","window","confirm","find","p","updatedPerson","returnedPerson","map","messageHandler","catch","error","string","setTimeout","personsToShow","filter","match","RegExp","event","target","preventDefault","clear","document","getElementById","focus","concat","errorMessage","key","res","deleteData","ReactDOM","render"],"mappings":"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","file":"static/js/main.8b666c66.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = index => {\r\n    return axios.delete(`${baseUrl}/${index}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, del, update}","import React from 'react'\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n     return (\r\n        <li>\r\n            {person.name} {person.number}\r\n            <button onClick={deletePerson}>delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Person","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport './PhonebookApp.css'\r\nimport Person from \"./components/Person\";\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter shown with\r\n            <input value={props.value}\r\n                   onChange={props.onChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n            <div>\r\n                name:\r\n                <input value={props.namevalue}\r\n                       onChange={props.onChangeName}\r\n                       id='name'/>\r\n            </div>\r\n            <div>\r\n                number:\r\n                <input value={props.numbervalue}\r\n                       onChange={props.onChangeNumber}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) return null\r\n    else if (message.startsWith('Error')) {\r\n        return (<div className=\"error\">{message}</div>)\r\n    }\r\n    return <div className=\"success\">{message}</div>\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const [ persons, setPersons ] = useState([])\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ newFilter, setNewFilter ] = useState('')\r\n    const [ message, setMessage ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons)\r\n            })\r\n    }, [])\r\n\r\n    const addData = (event) => {\r\n        event.preventDefault()\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        const clear = () => {\r\n            setNewName('')\r\n            setNewNumber('')\r\n            document.getElementById('name').focus()\r\n        }\r\n\r\n        if (persons.find(person => person.name === newName)) {\r\n            updateData(personObject)\r\n            clear()\r\n            return\r\n        }\r\n        personService\r\n            .create(personObject)\r\n            .then(returnedPerson => {\r\n                setPersons(persons.concat(returnedPerson))\r\n                messageHandler(`Added ${returnedPerson.name}`)\r\n                clear()\r\n            })\r\n            .catch(error => {\r\n                const errorMessage = error.response.data.match(/ValidationError: (.*?)<br>/)\r\n                if (errorMessage) {\r\n                    messageHandler(errorMessage[1])\r\n                } else {\r\n                    messageHandler(\"Unknown error\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const deleteData = (person) => {\r\n        if (window.confirm(`Delete ${person.name}?`)) {\r\n            personService.del(person.id).then(() => {\r\n                personService.getAll().then(res => {\r\n                    setPersons(res)\r\n                    messageHandler(`Deleted ${person.name}`)\r\n                })})\r\n        }\r\n    }\r\n\r\n    const updateData = (personObject) => {\r\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n\r\n            const person = persons.find(p => p.name === newName)\r\n            const updatedPerson = {...personObject, id: person.id}\r\n            personService\r\n                .update(person.id, updatedPerson)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.map(person => person.name !== newName \r\n                        ? person \r\n                        : returnedPerson))\r\n                    messageHandler(`${personObject.name}'s number updated`)\r\n                })\r\n                .catch(error => messageHandler(error.message))\r\n\r\n        }\r\n    }\r\n\r\n    const messageHandler = (string) => {\r\n        setMessage(string)\r\n        setTimeout(() => {\r\n            setMessage(null)\r\n        }, 2000)\r\n    }\r\n\r\n    const handleNameChange = (event) => setNewName(event.target.value)\r\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n    const handleFilterChange = (event) => setNewFilter(event.target.value)\r\n\r\n    const personsToShow = persons\r\n        .filter(person => person.name\r\n        .match(new RegExp(newFilter, 'i')\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification message={message} />\r\n            <Filter value={newFilter} onChange={handleFilterChange} />\r\n            <h2>Add a new:</h2>\r\n            <PersonForm\r\n                onSubmit={addData}\r\n                namevalue={newName}\r\n                numbervalue={newNumber}\r\n                onChangeName={handleNameChange}\r\n                onChangeNumber={handleNumberChange} />\r\n            <h2>Numbers:</h2>\r\n            <ul>\r\n                {personsToShow.map(person =>\r\n                <Person\r\n                    key={person.id}\r\n                    person={person}\r\n                    deletePerson={() => deleteData(person)}\r\n                />)}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './PhonebookApp';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}